import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv

# Loading token from .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# Logging
logging.basicConfig(level=logging.INFO)

# Creating bot and dispatcher
bot = Bot(token=TOKEN)
dp = Dispatcher()

# Handling /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç üëã –Ø –∫–∞—Ä—å–µ—Ä–Ω—ã–π –±–æ—Ç. –ù–∞–∂–º–∏ /menu, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")

# Handling /menu
@dp.message(Command("menu"))
async def menu(message: types.Message):
    keyboard = [
        [types.KeyboardButton(text="–û–±–æ –º–Ω–µ –∏ —É—Å–ª—É–≥–∞—Ö")],
        [types.KeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é")],
        [types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —á–µ–∫–ª–∏—Å—Ç—ã")],
    ]
    markup = types.ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=markup)

# Running the bot
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
